import{_ as t,c as e,o as a,a4 as r}from"./chunks/framework.BmcBt-ga.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"前端编码规范工程化","text":"ants-spec-docs","tagline":"v 1.0.5","image":{"src":"/it.svg","alt":"antsXDP"},"actions":[{"theme":"brand","text":"开始使用 ->","link":"/docs/main/10-编码规范/10-HTML编码规范.md"}]},"features":[{"icon":"🛠️","title":"全面的前端生态","details":"支持前端全部生态，无需关注环境，支持直接使用"},{"icon":"😀","title":"完善的规范配件","details":"支持对全部前端配置实现一键接入、一键扫描、一键修复、一键升级"},{"icon":"⚙️","title":"完整的测试用例","details":"配套完整的测试用例，帮助您提升项目健壮性"}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1714810326000}'),o={name:"index.md"},n=r('<h2 id="设计目的" tabindex="-1">设计目的 <a class="header-anchor" href="#设计目的" aria-label="Permalink to &quot;设计目的&quot;">​</a></h2><p>随着前端技术的发展，前端项目正在变得越来越复杂。<code>JavaScript</code> 作为一门弱类型解释性编程语言，其灵活多变的语法极大的提高了前端开发效率，但同时也存在一系列问题。在大型项目开发过程中，代码维护所占的时间比重往往大于新功能的开发。因此编写符合团队编码规范的代码是至关重要的。 一致性的代码规范可以增强团队开发协作效率、提高代码质量、减少遗留系统维护的负担。但是每个人的代码编写喜好不同，代码风格也会迥然不同，若要一个团队内所有的成员都能发挥最大程度的价值，一个具有普适性的标准是必不可少的。</p><p>那么，如何制定前端团队的代码规范，如何在团队内进行最小成本的推广，就是一个合格的前端架构师面临的一大难题。很多团队的基础建设都只是简单地知晓其中一部分规范工具的使用，但却没有一套完整的工程化产出来助力研发同学实现规范落地。因此，如果我们能够产出一套完整化的前端编码规范工具，都会对不仅能够解决存量项目的编码异味，还能够保证后续所有项目的编码质量。</p><h2 id="为什么需要前端工程化" tabindex="-1">为什么需要前端工程化 <a class="header-anchor" href="#为什么需要前端工程化" aria-label="Permalink to &quot;为什么需要前端工程化&quot;">​</a></h2><ol><li>如何通过 <code>monorepo</code> 和 <code>pnpm</code> 的多包管理方式开发一套多 <code>npm</code> 包的管理方式，以及如何将发包流程植入 <code>CI</code> 实现自动化发布，以及<code>CHANGLOG</code>的自动化更新部署；</li><li>现有前端前沿的研发流程下，我们可以通过哪些工具提升项目的编码规范，并提供配套工具的最佳实践，包括但不限于<code>eslint</code>、<code>stylelint</code>、<code>commitlint</code>、<code>markdownlint</code>、<code>husky</code>等，以及如何将单元测试植入配套工具的具体实现；</li><li>如何通过脚手架的方式，以交互式形式一键接入，实现对<code>JavaScript</code>、<code>Typescript</code>、<code>React</code>、<code>Vue</code>等不同类型的前端项目下的标准的语法限制；</li><li>如何对存量项目进行优化：对于存量代码不符合规范的问题，支持一键扫描和一键修复，一键式的修复存量问题，最小化存量代码的更新成本；</li><li>如何对新项目添加规范：支持一键接入新增项目，通过结合<code>gitpre-commit</code>钩子，对提交文件进行编码规范的扫描；同时通过<code>husky</code>的<code>commit-msg</code>钩子，对本次代码提交<code>message</code>的格式进行扫描。</li></ol><h2 id="配套工具" tabindex="-1">配套工具 <a class="header-anchor" href="#配套工具" aria-label="Permalink to &quot;配套工具&quot;">​</a></h2><p>我们引入了多个业界流行的 <code>Linter</code> 作为规范文档的配套工具，并根据规范内容定制了对应的规则包，它们包括：</p><table><thead><tr><th>规范</th><th>Lint 工具</th><th>NPM 包</th></tr></thead><tbody><tr><td>JavaScript 编码规范 <br> TypeScript 编码规范 <br> Node 编码规范</td><td><a href="https://eslint.org/" target="_blank" rel="noreferrer">ESLint</a></td><td><a href="https://www.npmjs.com/package/ants-spec-eslint" target="_blank" rel="noreferrer">ants-spec-eslint</a></td></tr><tr><td>CSS 编码规范</td><td><a href="https://stylelint.io/" target="_blank" rel="noreferrer">stylelint</a></td><td><a href="https://www.npmjs.com/package/ants-spec-stylelint" target="_blank" rel="noreferrer">ants-spec-stylelint</a></td></tr><tr><td>Git 规范</td><td><a href="https://commitlint.js.org/#/" target="_blank" rel="noreferrer">commitlint</a></td><td><a href="https://www.npmjs.com/package/ants-spec-commitlint" target="_blank" rel="noreferrer">ants-spec-commitlint</a></td></tr><tr><td>文档规范</td><td><a href="https://github.com/DavidAnson/markdownlint" target="_blank" rel="noreferrer">markdownlint</a></td><td><a href="https://www.npmjs.com/package/ants-spec-markdownlint" target="_blank" rel="noreferrer">ants-spec-markdownlint</a></td></tr><tr><td>Eslint 插件</td><td><a href="https://eslint.org/docs/latest/extend/plugins" target="_blank" rel="noreferrer">ESlint Plugin</a></td><td><a href="https://www.npmjs.com/package/ants-spec-eslint-plugin" target="_blank" rel="noreferrer">ants-spec-eslint-plugin</a></td></tr></tbody></table><p><a href="https://www.npmjs.com/package/ants-spec-clit" target="_blank" rel="noreferrer">ants-spec-cli</a> 收敛屏蔽了上述依赖和配置细节，提供简单的 <code>CLI</code> 和 <code>Node.js API</code>，让项目能够一键接入、一键扫描、一键修复、一键升级，并为项目配置 git commit 卡口，降低项目接入规范的成本。</p><p>您可以使用<a href="https://www.npmjs.com/package/ants-spec-cli" target="_blank" rel="noreferrer">ants-spec-cli</a> 方便地为项目接入全部规范。</p><h2 id="联系我们" tabindex="-1">联系我们 <a class="header-anchor" href="#联系我们" aria-label="Permalink to &quot;联系我们&quot;">​</a></h2><ul><li><strong>antsXDP 官网</strong>: <a href="https://www.antsxdp.com" target="_blank" rel="noreferrer">https://www.antsxdp.com</a></li><li><strong>GitHub</strong>: <a href="https://github.com/xyyaxyy/ants-spec" target="_blank" rel="noreferrer">https://github.com/xyyaxyy/ants-spec</a></li></ul>',12),c=[n];function s(d,l,i,p,h,m){return a(),e("div",null,c)}const _=t(o,[["render",s]]);export{f as __pageData,_ as default};
